## Javascript零基础编程-笔记

在这5个任务中，最后两个任务较为复杂（会遇到更多问题），下面是记录的一些问题及解决方法。

1. `document.createElement()`创建的元素a在被append之后，会自动地成为选择的dom节点，对a的dom操作就如同a本来就已经在dom tree里一样。

2. 进行绑定事件时，回调函数只需要函数名而不带圆括号，如`a.addEventListener("click", show)`，如带圆括号如`show()`则在绑定时就会执行该函数。

3. 对象属性有两种表示方法，`.`操作和`[]`操作，`.`适用于符合JS标识符命名规则的情况，`[]`适用于所有情况。特别地，数组的下标属性只能通过`[]`来选择。对象添加新属性也使用`[]`，因为`.`选择的是已经存在的属性。

4. `for(var p in obj)`的问题，obj及其原型链上所有可枚举的属性都会被迭代，要想只迭代自定义的obj属性，可通过`obj.hasOwnProperty(p)`来判断。此外，这种迭代方式是无序的。当遍历数组时，使用`for...in`会迭代数组原型链上的属性，并且过程的顺序不能保证如预期，通常速度也更慢（遍历原型链），所以遍历数组不推荐使用`for...in`，可以使用普通的`for`或`while`循环。[参考stackoverflow](http://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-a-bad-idea)

5. 进制转换使用`toString(n)`，`n`是基数，范围是[2,36]，缺省时为10。

6. CSS选择父元素的问题：目前纯CSS没有父元素选择器，[这里](https://css-tricks.com/parent-selectors-in-css/)是一篇短文对这个问题的讨论。

---

[柱状图图表](task0002-1-5.html)这个任务的html及js代码结构参考任务提供的参考代码，一定程度上提供了解决思路，尤其是js部分，有了比较好的逻辑模块化。如果自己来写，想必会很乱。但实际编程时，还是碰到各种小问题。除了对js知识的熟悉不够外，我觉得主要的原因在于没有对任务的需求描述理解透，初上手就很表面地只想到每个部分的实现方法，常常看不到每步的联系及其过渡细节，所以整个过程容易出现各种小问题，需要不断修修补补。

经过这个任务，我总结了一下完成任务的思路。

* 通读需求描述，对html及js逻辑有个大概了解，并对html部分进行编码

* 数据准备&预处理

* 交互初始化（页面事件绑定）

* 绑定事件回调函数编程

* 页面内容更新
